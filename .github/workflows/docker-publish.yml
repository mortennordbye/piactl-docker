# .github/workflows/docker-publish.yml
name: Build & Publish piactl Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine latest PIA version
        id: pia_version
        run: |
          set -euo pipefail

          # 1) Grab the HTML of PIAâ€™s Linux VPN page
          html=$(curl -fsSL https://www.privateinternetaccess.com/download/linux-vpn)

          # 2) Extract the first pia-linux-X.Y.Z-NNNNN.run URL
          installer_url=$(grep -oE 'https://installers\.privateinternetaccess\.com/download/pia-linux-[0-9]+\.[0-9]+\.[0-9]+-[0-9]{5}\.run' <<< "$html" | head -1)

          if [[ -z "$installer_url" ]]; then
            echo "ERROR: installer URL not found!" >&2
            exit 1
          fi

          echo "Found installer URL: $installer_url"

          # 3) Parse out the version string
          filename=${installer_url##*/}
          version=${filename#pia-linux-}
          version=${version%.run}

          # 4) Export to GITHUB_ENV
          echo "PIA_VERSION=$version" >> $GITHUB_ENV
          echo "Using PIA_VERSION=$version"

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/piactl:latest
            ghcr.io/${{ github.repository_owner }}/piactl:${{ github.sha }}
          build-args: |
            PIA_VERSION=${{ env.PIA_VERSION }}
